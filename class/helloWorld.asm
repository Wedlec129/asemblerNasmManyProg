section .data ;в секции дата мы определяем переменные которые будем использовать
str1 db 'Hello world',0xd, 0xa  ;стр1 опер байт сдвигаем карету переход на слд стр
l_str equ $-str1   ;определяем дину нашей строки

;nasm -felf64 1.asm && ld 1.o && ./a.out

;nasm -felf64 -Fdwarf first.asm 
;ld first.o -o qwe
;./qwe


;;важное правило: перем!=перем ТОЛЬКО РЕГИСТР=РЕГИСТР || перем=РЕГИСТР

section .text
global _start

_start:

	;;вывод строки
	mov eax, 4 ;типо используем 4 команду write mov-копировать (присвоить) регистру eax 4
	mov ebx, 1 ;куда 1- консоль
	mov ecx, str1; что
	mov edx, l_str; сколько
	int 0x80;типо завершить 
	;;

	;;
	mov byte [str1+0],'a' ;меняем нулевой элемент строки на символ "a" (байт 1) []-значение из ячейки 
	mov dword [str1+1],'alo';меняем нулевой элемент строки на строку "a" (dword 1) []-значение из ячейки 
	;;

	;;меняем местами 2 и 6 элементы
	mov al,[str1+2]  ;;регистр al =l
	xchg al,[str1+6] ;меняем местами  [str1+6]=al;[str1+6]old=al и мы типо не создаём третью переменную
	mov [str1+2],al
	;;


	;;завершение выполнение прог
	mov eax, 1; типо используем комманду 1
	mov ebx, 0
	int 0x80
	;;
